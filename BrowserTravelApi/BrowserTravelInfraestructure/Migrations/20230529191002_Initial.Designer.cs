// <auto-generated />
using BrowserTravelInfraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BrowserTravelInfraestructure.Migrations
{
    [DbContext(typeof(BrowserTravelCoreApiDbContext))]
    [Migration("20230529191002_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BrowserTravelDomain.AutorHasLibro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("autorId")
                        .HasColumnType("int");

                    b.Property<int>("libroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("autorId");

                    b.HasIndex("libroId");

                    b.ToTable("AutorHasLibros");
                });

            modelBuilder.Entity("BrowserTravelDomain.Autors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("BrowserTravelDomain.Editorials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sede")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("BrowserTravelDomain.Libros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("editorialId")
                        .HasColumnType("int");

                    b.Property<string>("nPaginas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sinopsis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("editorialId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("BrowserTravelDomain.AutorHasLibro", b =>
                {
                    b.HasOne("BrowserTravelDomain.Autors", "Autor")
                        .WithMany()
                        .HasForeignKey("autorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrowserTravelDomain.Libros", "Libro")
                        .WithMany()
                        .HasForeignKey("libroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("BrowserTravelDomain.Libros", b =>
                {
                    b.HasOne("BrowserTravelDomain.Editorials", "Editorial")
                        .WithMany()
                        .HasForeignKey("editorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editorial");
                });
#pragma warning restore 612, 618
        }
    }
}
